【1】打开MBN的rmnet端口
adb root
adb shell setprop persist.radio.start_ota_daemon 0
adb shell setprop sys.usb.config diag,serial_smd,rmnet_bam,adb
adb shell setprop sys.usb.config diag,serial_smd,rmnet_qti_bam,adb

【2】MBN Auto-select功能
(前提是已经有一个SW-MBN被激活正在使用，因为默认MBN里没有设置auto-select的选项设置)
手机插入sim卡后，根据所在地的运营商提供的网络环境选择手机里中的某一个MBN激活并应用。
除去HW和SW的两个default_MBN以外，同一时间只能再激活应用一个SW_MBN。

关联NV-71546，value值即所有可用功能对应值之和。
7 0x80 Disable MCFG Refresh without reset feature
6 0x40 Disable MCFG SSR for MBN activation (For MDM LE only)
5 0x20 Enable MCFG Refresh MBN update only feature (APPS centric with MBN for testing)
4 0x10 Reserved
3 0x08 Reserved
2 0x04 Enable MCFG Auto-Selection based on IMSI/MCC-MNC
1 0x02 Enable MCFG MBN Switching for Flex Mapping (Bit 0 or 2 has to be enabled as well)
0 0x01 Enable MCFG Auto-Selection based on ICCID
在8939项目中该值设置为0x03，在8976项目中该值设定为0x07，分别可以根据sim卡的ICCID或者IMSI/MCC-MNC来进行MBN的自动选择。
前者的原理是MCFG通过检测SIM卡根据卡中ICCID的Issuer Identification Number(IIN)字段来匹配/激活对应的MBN文件。
后者则是直接插卡后网络端发送给UE的IMSI/MCC-MNC信息来判断选择合适的MBN文件。
(ICCID: Integrate circuit card identity)


最好是在default的MBN中直接加NV-71546的设置，这样可以避免出现该NV丢失的情况，否则就最好加一个宏(hardcode)，当出现该NV丢失时，这个宏就会作为auto-select的定义。
modify: /modem_proc/mcfg/mcfg_sel/src/mcfg_uim.c
- #define MCFG_UIM_AUTOSELECT_DEFAULT (0)
+ #define MCFG_UIM_AUTOSELECT_DEFAULT (3)

在adb中启用，让OTA更新MBN这个feature在上层被使能
adb shell setprop persist.radio.sw_mbn_update 1


【3】samba服务器设置
cd /var/lib/dpkg/
sudo mv info/ info.bak/
sudo mkdir info/
sudo apt-get install smbclient
 samba-common
 smbclient
 samba-common-bin
 samba
sudo rm -rf info/
sudo mkdir info
...

新建共享文件夹，chmod改权限

sudo apt-get update
sudo vim /etc/samba/smb.conf

# Cap the size of the individual log files (in KiB).
	max log size = 1000
+	security = user
 
+[own share]
+	comment = my own share
+	path = /home/eminem/share
+	browseable = yes
+	writable = yes

sudo useradd smbuser
sudo smbpasswd -a smbuser -->设置密码
sudo service smbd restart
ifconfig --> 在windows端输入linux虚拟机的ip地址即可访问共享文件夹的内容

【4】利用xml source生成MBN
利用带宏的excel表生成MBN，之前张锐已经有wiki介绍过，所以这里我再补充一下另外一种生成MBN的方法，无论是自己验证或者是后续的代码调整实际上都是通过读取相应的xml表来读取设置的EFS/NV，而excel表生成MBN的方法中，生成的命令其实就是执行modem_proc/build/build_mcfgs.exe这个可执行文件，在linux环境下，我们可以使用这个可执行文件，加上一些适当的参数，就能到达在excel中生成的相同效果。

build_mcfgs.exe --build_id=<BUILD ID> --configs=<PLATFORM>:<CONFIG_NAME> [--force-regenerate] [--force-rebuild] [--source-dir=<CARRIER_DIR_PATH]
以上这个命令就是一些常用的参数后缀
1.build-id可以参考excel表里summary那一栏image的属性值，这一项在生成特有MBN时可以为空
2.configs中platform填写mcfg_sw或mcfg_hw；config_name填写对应运行商的名字
3.--force-regenerate --force-rebuild 强制重新生成对应的xml source和MBN文件
4.source-dir即要生成MBN的文件对应excel表的目录地址

范例：build_mcfgs.exe --build_id=Generic --configs=mcfg_sw:CMCC --force-regenerate --force-rebuild --source-dir=generic\China\CMCC

build_mcfgs.exe --build_id=FAAAANVZ --build_ver=33625394 --configs=mcfg_sw:CU --xml --sw-product=CU --force-regenerate --force-rebuild

build_mcfgs.exe --build_id=8976.gen.prod --build_ver=33625394 --configs=mcfg_sw:CU --xml --sw-product=CU --force-regenerate --force-rebuild

AAAAANAZ
EAADANAZ
8976.gen.prod

e.g:
Windows:
build_mcfgs.exe --build_id=8976.gen.prod --build_root=D:\msm8976 --build_ver=33625394 --configs=mcfg_sw:CU --xml --force-regenerate --force-rebuild --source-dir=generic\China\CU

Linux:
perl build_mcfgs.pl --build_id=8976.gen.prod --build_ver=33625394 --configs=mcfg_sw:CU --xml --force-regenerate --force-rebuild --source-dir=generic/China/CU
perl ./build_mcfgs.pl --build_id=8976.gen.prod --xml --force-regenerate --force-rebuild --source-dir=generic/China/CU
perl ./build_mcfgs.pl --build_id=8976.gen.prod --build_ver=33625394 --configs=mcfg_sw:CU --xml --sw-product=CU

functions well:
perl ./build_mcfgs.pl --build_id=8976.gen.prod [--build_ver=33625394] --xml --force-regenerate --force-rebuild --source-dir=generic/China/CU
perl ./build_mcfgs.pl --build_id=FAAAANVZ --xml --force-regenerate --force-rebuild --source-dir=generic/China/CMCC

mcfg version: 在xml表中修改都是自增1即可，0x0203202D
直接修改xml表来修改并生成MBN，用PDC验证时会出现有时候active MBN时，重新恢复到了手机初始选择MBN的状态，修改验证MBN后，尝试了手机重启，MBN不会被重置，是有效的。






