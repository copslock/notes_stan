1.HW
budget: 8K
CPU: intel core i7-6700k(2050 or 2300)
mainborad: ASUS z170 progaming(1500) or ASUS z170 AR(1100) or AShock z170 extreme4(1000)
Graphics-card: Nvidia GTX 1070(2900)
RAM: Kingston Fury 8G*2(400) or Corsair 8G*2(400)
Radiator: 九州风神 玄冰400(100) or 九州风神 大霜塔(200)
Power: Antec EAG550 550W(520) or The Great Wall Dragon 600W(450)
chassis: Aigo YOGO(200) or Sama Tank(180)
Monitor: Dell U2414H(1300) or AOC i2579VM(950)

2.OS
HOST: win 10
Vitual machine: Ubuntu-14.04


3.SW
Mircosoft 
	Visual studio 2013 community
	offices 2013
	
Adobe 
	PR
	AE
	AU
	PS
	
1.SVLTE:Simultaneous Voice and LTE,同我们通常所讲的电信的双卡双待类似。双待机终端可以同时待机在LTE网络和3G/2G网络里，而且可以同时从LTE和3G/2G网络接收和发送信号，其语音解决方案的实质是使用传统3G/2G网络，与LTE无关。 
2.SGLTE:Simultaneous GSM and LTE,即是支持GSM语音和LTE数据业务同步的一种技术，及单卡双模，相当于将俩个手机（一个支持LTE，一个支持GSM or TDSDMA)采用特殊的技术（例如CSFB）用一张SIM卡能同时进行CS,PS工作的LTE过渡方案。
3.VoLTE:Voice Over LTE. 其原理是基于IP多媒体子系统（IMS）网络，配合GSMA在PRD IR.92中制定的在LTE控制和媒体层面的语音服务标准，使用语音以数据流形式在LTE网络中传输，所以无需调用传统电路交换网络，旧网络将无需保留。

qcom协议侧的代码多是不开放或者开放不完全的，所以其实学不到什么很系统的代码知识，了解一下高通代码的架构，利用3gpp的协议规范结合实际问题去分析解决问题，具体的代码细节问题大多还是要问到qcom那边，c和cpp文件的patch改动还能参考下，.o类的文件修改用反编译命令objdump还能应付下，lib类库文件就完全没办法了= =


#ATTENTION: How the string of projectid processed to satisfy the proprietary code building
        #local __tmp_dir=$__qc_root_dir/$__qc_app_target/$__project_id
-       local __tmp_dir=$__qc_root_dir/$__qc_app_target/${__project_id#${__project_id%%msm*}}
-       mkdir -p $__tmp_dir
-       cp -rf ${__full_app_file_path_list} ${__tmp_dir}/ >>${__tar_log_file} 2>>${__tar_log_file}
+#      local __tmp_dir=$__qc_root_dir/$__qc_app_target/${__project_id#${__project_id%%msm*}}
+#      mkdir -p $__tmp_dir
+#      cp -rf ${__full_app_file_path_list} ${__tmp_dir}/ >>${__tar_log_file} 2>>${__tar_log_file}
 
        #3. Updating NON-HLOS.bin
+       cd $__qc_root_dir
+
+       sed s/${__project_id#${__project_id%%msm*}}/$TARGET_PRODUCT/g -i contents.xml
        cd $__qc_root_dir/common/build
        python build.py

	